{"version":3,"sources":["webpack:///webpack/bootstrap ee36225de04d2ebfd3c8","webpack:///./space_invaders.js","webpack:///./moving_aliens.js","webpack:///./moving_objects.js","webpack:///./moving_bullets.js","webpack:///./utils.js","webpack:///./moving_ship.js","webpack:///./explosion.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,sBAAqB;AACrB,qBAAoB;AACpB,oBAAmB;AACnB;AACA;AACA;;AAEA;;;AAGA;AACA,wBAAuB,kEAAkE;AACzF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;AAGA;AACA,oBAAmB,WAAW;AAC9B,qBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,2BAA0B,6CAA6C;AACvE;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,+BAA+B;AAC3D;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;ACtNA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACnCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;AAIA,gBAAe,WAAW;AAC1B,eAAc,YAAY;AAC1B,eAAc,WAAW;;AAEzB,iBAAgB,YAAY;AAC5B,gBAAe,aAAa;AAC5B,eAAc,YAAY;AAC1B,cAAa,aAAa;;;AAG1B;AACA;;;;;;;AC/BA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ee36225de04d2ebfd3c8\n **/","const Alien = require('./moving_aliens');\nconst Ship = require('./moving_ship');\nconst Bullet = require('./moving_bullets');\nconst Utils = require('./utils');\nconst Explosion = require('./explosion.js');\n\nvar canvas = document.getElementById('canvas');\nvar ctx = canvas.getContext('2d');\nctx.strokeStyle = \"transparent\";\n\nfunction Game(ctx){\n  this.aliens = [];\n  this.wall = [];\n  this.shipBullets = [];\n  this.alienBullets = [];\n  this.ship = [];\n  this.specialAliens = [];\n  this.explosions = [];\n  this.counter = 0;\n  this.ctx = ctx;\n  this.hoverGap = 40;\n  this.alienBullet = {x: 0, y: 15};\n  this.shipBullet = {x: 0, y: -25};\n  this.shipRight = {x: 10, y: 0};\n  this.shipLeft = {x: -10, y: 0};\n  this.bulletRadius = 3;\n  this.backgroundImage = new Image();\n  this.backgroundImage.src = Utils.background;\n\n}\n\n\nGame.prototype.makeShip = function () {\n  let ship = new Ship({x_pos: 400, y_pos: 720, radius: 25, game: this, image: Utils.ship});\n  this.ship.push(ship);\n};\n\nGame.prototype.makeExplosion = function (pos) {\n  let explode = new Explosion({\n    pos: pos,\n    frameWidth: 64,\n    frameHeight: 64,\n    frameX: 0,\n    frameY: 0,\n    game: this,\n    image_src: Utils.explosion\n  });\n  this.explosions.push(explode);\n};\n\n\nGame.prototype.makeAliens = function (){\n  for (let i = 100; i <= 800 ;i += 120) {\n    for (let j = 50; j <= 250; j += 50){\n      let alien = new Alien({\n        x_pos: i,\n        y_pos: j,\n        radius: 20,\n        game: this,\n        image: Utils.alien\n      });\n      this.aliens.push(alien);\n    }\n  }\n};\n\n// work on this tommorrow\nGame.prototype.makeSpecialAlien = function () {\n  let x = Math.floor(Math.random()*1.9)*800;\n  let y = Math.random()*400 + 200;\n\n  let alien = new Alien({\n    x_pos: x,\n    y_pos: y,\n    radius: 20,\n    game: this,\n    image: Utils.specialAlien\n  });\n  let specialAlienMove;\n  if (x === 0) {\n     specialAlienMove = alien.moveObj.bind(alien, Utils.specialAlienRight);\n  } else {\n    specialAlienMove = alien.moveObj.bind(alien, Utils.specialAlienLeft);\n  }\n\n\n  this.special.push(specialAlienMove);\n  this.specialAliens.push(alien);\n};\n\nGame.prototype.clear = function () {\n  this.ctx.clearRect(0,0, canvas.width, canvas.height);\n};\n\nGame.prototype.drawAll = function (){\n  this.drawBackground();\n  let allObjects = this.aliens.concat(this.ship, this.shipBullets, this.alienBullets, this.explosions, this.specialAliens);\n  allObjects.forEach((obj) => {\n    obj.draw();\n  });\n};\n\nGame.prototype.drawBackground = function () {\n  this.ctx.drawImage(this.backgroundImage, 0, 0);\n};\n\nGame.prototype.moveAliens = function (alienMove){\n  this.aliens.forEach((alien) => {\n    alien.moveObj(alienMove);\n  });\n};\n\n\nGame.prototype.wobbleAliens = function (){\n  let gap = this.hoverGap;\n  if (this.counter >= gap/2) {\n    this.counter += 1;\n    this.counter = this.counter%gap;\n    this.moveAliens(Utils.alienRight);\n  } else if (this.counter >= 0) {\n    this.counter += 1;\n    this.counter = this.counter%gap;\n    this.moveAliens(Utils.alienLeft);\n  }\n  if (this.counter === gap -1 ) {\n    this.moveAliens(Utils.alienDown);\n  }\n};\n\nGame.prototype.moveShipBullets = function (){\n  this.shipBullets.forEach((bullet) => {\n    bullet.moveObj(Utils.shipBullet);\n  });\n};\n\nGame.prototype.moveAlienBullets = function (){\n  this.alienBullets.forEach((bullet) => {\n    bullet.moveObj(Utils.alienBullet);\n  });\n};\n\nGame.prototype.setAlienFire = function () {\n\n  let alienFire = function () {\n    let index = Math.floor(Math.random()*this.aliens.length);\n    this.aliens[index].fire();\n  }.bind(this);\n\n  setInterval(alienFire, Utils.bulletFrequency);\n};\n\nGame.prototype.checkShipCollision = function (){\n  this.alienBullets.forEach((bullet, alienIndex)=>{\n    if (bullet.collideWith(this.ship[0])){\n      this.makeExplosion({x: this.ship[0].x_pos, y: this.ship[0].y_pos});\n      this.ship.splice(0, 1);\n      this.alienBullets.splice(alienIndex, 1);\n      this.makeShip();\n\n    }\n  });\n};\n\nGame.prototype.checkAlienCollision = function (){\n  this.shipBullets.forEach((bullet, bulletIndex)=>{\n    this.aliens.forEach((alien, alienIndex) => {\n      if(bullet.collideWith(alien)){\n        this.aliens.splice(alienIndex, 1);\n        this.shipBullets.splice(bulletIndex, 1);\n        this.makeExplosion({x: alien.x_pos, y: alien.y_pos});\n      }\n    });\n  });\n};\n\nGame.prototype.gameWon = function () {\n  if (this.aliens.length === 0) {\n    // clearInterval(this.timer);\n    return true;\n  }\n};\n\nGame.prototype.gameLost = function () {\n\n  if (this.ship.length === 0) {\n    // clearInterval(this.timer);\n    return true;\n  }\n};\n\n\nGame.prototype.moveAll = function () {\n  this.clear();\n  this.ship[0].moveShip();\n  this.moveAlienBullets();\n  this.moveShipBullets();\n  this.wobbleAliens();\n  this.checkShipCollision();\n  this.checkAlienCollision();\n  this.gameWon();\n  this.gameLost();\n  this.drawAll();\n};\n\nGame.prototype.play = function (){\n  this.makeAliens();\n  this.makeShip();\n  this.setAlienFire();\n  this.timer = setInterval(this.moveAll.bind(this), 60);\n};\n\n\nlet game = new Game(ctx);\n\ngame.play();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./space_invaders.js\n ** module id = 0\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_objects\");\nconst Bullet = require(\"./moving_bullets\");\nconst Utils = require(\"./utils\");\n\nfunction Alien(params) {\n  MovingObject.call(this, params);\n}\n\nUtils.inherits(Alien, MovingObject);\n\n\nAlien.prototype.fire = function () {\n  let params = {};\n  params.x_pos = this.x_pos;\n  params.y_pos = this.y_pos;\n  params.game = this.game;\n  params.image = Utils.alienBulletImage;\n  let bullet = new Bullet(params);\n  this.game.alienBullets.push(bullet);\n\n};\n\n\nmodule.exports = Alien;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./moving_aliens.js\n ** module id = 1\n ** module chunks = 0\n **/","function MovingObject(params) {\n  this.image = new Image();\n  this.image.src = params.image;\n  this.x_pos = params.x_pos;\n  this.y_pos = params.y_pos;\n  this.game = params.game;\n  this.radius = params.radius;\n}\n\nMovingObject.prototype.draw = function (){\n  let x = this.x_pos;\n  let y = this.y_pos;\n  this.game.ctx.beginPath();\n  this.game.ctx.arc(x, y, this.radius, 0, Math.PI*2, true);\n  this.game.ctx.stroke();\n  this.showImage();\n};\n\nMovingObject.prototype.showImage = function () {\n    this.game.ctx.drawImage(this.image, this.x_pos, this.y_pos, 50, 50);\n};\n\nMovingObject.prototype.moveObj = function (vector){\n  this.x_pos += vector.x;\n  this.y_pos += vector.y;\n};\n\nMovingObject.prototype.collideWith = function (otherObj) {\n  let distance = Math.sqrt(Math.pow((this.x_pos - otherObj.x_pos), 2) + Math.pow((this.y_pos - otherObj.y_pos), 2));\n  if (distance < this.radius + otherObj.radius) {\n    return true;\n  }\n};\n\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./moving_objects.js\n ** module id = 2\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_objects\");\nconst Util = require(\"./utils\");\n\nfunction Bullet(params) {\n  params.radius = params.game.bulletRadius;\n  MovingObject.call(this, params);\n}\n\nUtil.inherits(Bullet, MovingObject);\n\nmodule.exports = Bullet;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./moving_bullets.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = {\n  inherits: function (ChildClass, ParentClass) {\n    function Surrogate(){}\n    Surrogate.prototype = ParentClass.prototype;\n    ChildClass.prototype = new Surrogate();\n    ChildClass.prototype.constructor = ChildClass;\n  },\n\n  alien: 'images/green_invader.png',\n  specialAlien: 'red_invader.png',\n  ship: 'images/galaga.png',\n  shipBulletImage: 'images/green_bullet.png',\n  alienBulletImage: 'images/red_bullet.png',\n  background: 'images/space.jpg',\n\n\n  explosion: 'images/explosion.png',\n\n\n\n  alienRight: {x: 4, y: 0},\n  alienLeft: {x: -4, y: 0},\n  alienDown: {x: 0, y: 8},\n\n  alienBullet: {x: 0, y: 15},\n  shipBullet: {x: 0, y: -25},\n  shipRight: {x: 10, y: 0},\n  shipLeft: {x: -10, y: 0},\n\n\n  bulletFrequency: 200\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./utils.js\n ** module id = 4\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_objects\");\nconst Bullet = require('./moving_bullets');\nconst Utils = require(\"./utils\");\n\n\nfunction Ship(params){\n  this.leftPressed = false;\n  this.rightPresed = false;\n  this.spacePressed = false;\n  this.timeOut = 0;\n  MovingObject.call(this, params);\n  this.startShip();\n}\n\nUtils.inherits(Ship, MovingObject);\n\nShip.prototype.addListeners = function (){\n  document.addEventListener(\"keydown\",this._handleKeyDown.bind(this));\n  document.addEventListener(\"keyup\",this._handleKeyUp.bind(this));\n};\n\nShip.prototype._handleKeyDown = function(e) {\n  if (e.keyCode === 65) {\n    this.leftPressed = true;\n  } else if (e.keyCode === 68) {\n    this.rightPresed = true;\n  }\n  if (e.keyCode === 32) {\n    this.spacePressed = true;\n  }\n};\n\n\nShip.prototype._handleKeyUp = function(e) {\n  if (e.keyCode === 65) {\n    this.leftPressed = false;\n  } else if (e.keyCode === 68) {\n    this.rightPresed = false;\n  }\n  if (e.keyCode === 32){\n    this.timeOut = 0;\n    this.spacePressed = false;\n  }\n};\n\nShip.prototype.fire = function () {\n  let params = {};\n  params.x_pos = this.x_pos;\n  params.y_pos = this.y_pos;\n  params.game = this.game;\n  params.image = Utils.shipBulletImage;\n  let bullet = new Bullet(params);\n  this.game.shipBullets.push(bullet);\n\n};\n\nShip.prototype.startShip = function () {\n  this.addListeners();\n};\n\nShip.prototype.moveShip = function () {\n  if (this.leftPressed === true) {\n    this.moveObj(this.game.shipLeft);\n  }\n  if (this.rightPresed === true) {\n    this.moveObj(this.game.shipRight);\n  }\n  if (this.spacePressed === true) {\n    this.timeOut = this.timeOut % 10;\n    if (this.timeOut % 10 === 0){\n      this.fire();\n    }\n    this.timeOut += 1;\n  }\n};\n\n\n\n\nmodule.exports = Ship;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./moving_ship.js\n ** module id = 5\n ** module chunks = 0\n **/","function Explosion(params){\n  this.pos = params.pos;\n  this.frameWidth = params.frameWidth;\n  this.frameHeight = params.frameHeight;\n  this.game = params.game;\n  this.ctx = params.game.ctx;\n  this.frameX = params.frameX;\n  this.frameY = params.frameY;\n  this.image = new Image();\n  this.image.src = params.image_src;\n}\n\n\nExplosion.prototype.draw = function (){\n\n  this.ctx.drawImage(this.image, this.frameX, this.frameY, this.frameWidth, this.frameHeight,\n                    this.pos.x, this.pos.y, this.frameWidth, this.frameHeight);\n\n                    this.frameX += this.frameWidth;\n\n\n                    if (this.frameX >= 320) {\n                      this.frameX = 0;\n                      this.frameY += this.frameHeight;\n                    }\n\n                    if (this.frameY >= 320) {\n                      this.game.explosions;\n                    }\n\n};\n\nExplosion.prototype.animate = function (){\n  this.explode = setInterval(this.draw.bind(this), 50);\n};\n\nmodule.exports = Explosion;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./explosion.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}